name: Django CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test_db
          MYSQL_USER: test_user
          MYSQL_PASSWORD: test_pass
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    env:
      DJANGO_SETTINGS_MODULE: messaging_app.settings
      MYSQL_HOST: 127.0.0.1
      MYSQL_PORT: 3306
      MYSQL_DB: test_db
      MYSQL_USER: test_user
      MYSQL_PASSWORD: test_pass
      PYTHONPATH: ${{ github.workspace }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-django mysqlclient flake8 pytest-cov

      - name: Wait for MySQL
        run: |
          echo "Waiting for MySQL to start..."
          until mysqladmin ping -h 127.0.0.1 --silent; do
            sleep 2
          done

      - name: Run Linting (flake8)
        run: |
          echo "Running flake8 for code quality checks..."
          flake8 .
        # Fail build if any linting errors are found
        continue-on-error: false

      - name: Run Django migrations
        run: |
          python manage.py migrate

      - name: Run Tests with Coverage
        run: |
          pytest --cov=. --cov-report=xml --cov-report=term --disable-warnings -v

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.xml
          
name: Build and Push Docker Image

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/messaging_app:latest
